# -*- coding: utf-8 -*-
"""neural-network-image-classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-Jc2vFG0_7Pe4BgG-vk3ncJuEPPPvC28
"""

from keras.datasets import fashion_mnist


import tensorflow as tf


import numpy as np
import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
import numpy as np

(trainX, trainy), (testX, testy) = fashion_mnist.load_data()


print('Train: X = ', trainX.shape)
print('Test: X = ', testX.shape)

trainX= trainX/ 255.0
testX= testX/ 255.0

for i in range(1, 10):


    plt.subplot(3, 3, i)


    plt.imshow(trainX[i], cmap=plt.get_cmap('gray'))


plt.show()

model = tf.keras.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10)
])

model.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])

model.summary()

history = model.fit(
    trainX, trainy,
    epochs=10,
    validation_data = (testX, testy))

acc = history.history['accuracy']
val_acc = history.history['val_accuracy']
loss = history.history['loss']
val_loss = history.history['val_loss']

plt.plot(history.history['accuracy'], label='accuracy')
plt.plot(history.history['val_accuracy'], label = 'val_accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.5, 1])
plt.legend(loc='lower right')

plt.plot(history.history['loss'], label='loss')
plt.plot(history.history['val_loss'], label = 'val_loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.ylim([0, 1])
plt.legend(loc='lower right')

